<%
const props = [
  {
    obj: Title1,
    selector: 'h1',
  }, {
    obj: Title2,
    selector: 'h2',
  }, {
    obj: Title3,
    selector: 'h3',
  }, {
    obj: Paragraphs,
    selector: '',
  }, {
    obj: Links,
    selector: 'a',
  }
].filter(prop => typeof prop.obj !== 'undefined');
function getProp(prop, propName) {
  if(typeof prop.obj[propName] != 'undefined' && prop.obj[propName] != '')
    return propName + ': ' + prop.obj[propName] + ';';
  return '';
}
%>
<% props.forEach(prop => { %>
  <%
  let found = false;
  for(name in prop.obj) {
    if(prop.obj[name] !== '') found = true;
  }
  if(found) {
  %>
    .<%= className %> <%= prop.selector %> {
      <%= getProp(prop, 'font-family') -%>
      <%= getProp(prop, 'font-style') -%>
      <%= getProp(prop, 'font-variant') -%>
      <%= getProp(prop, 'font-weight') -%>
      <% if(prop.obj['numerical-size']) { %>
        font-size: <%= prop.obj['numerical-size'] -%>;
      <% } else { %>
        <%= getProp(prop, 'font-size') -%>
      <% } %>
      <%= getProp(prop, 'color') -%>
      <%= getProp(prop, 'background-color') -%>
      <%= getProp(prop, 'text-decoration') -%>
      <%= getProp(prop, 'text-align') -%>
      <%= getProp(prop, 'text-transform') -%>
      <%= getProp(prop, 'line-height') -%>
      <%= getProp(prop, 'word-spacing') -%>
      <%= getProp(prop, 'letter-spacing') -%>
      <%= getProp(prop, 'text-indent') -%>
      <%= getProp(prop, 'direction') -%>
    }
  <% } %>
<% }) %>


